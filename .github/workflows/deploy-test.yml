name: Test Direct File Deployment

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: npm run build
        
      - name: Verify build output
        run: |
          echo "=== BUILT INDEX.HTML ==="
          cat dist/index.html
          echo -e "\n=== CHECKING SCRIPT TAG ==="
          grep "script" dist/index.html
        
      - name: Deploy to gh-pages branch
        run: |
          # Configure git
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Create a clean temporary directory with ONLY dist files
          mkdir -p temp-deploy
          cp -r dist/* temp-deploy/
          
          # List what we're about to deploy
          echo "=== FILES TO DEPLOY ==="
          ls -la temp-deploy/
          echo "=== TEMP DEPLOY INDEX.HTML ==="
          cat temp-deploy/index.html
          
          # Switch to gh-pages branch (create if doesn't exist)
          git checkout --orphan gh-pages-clean
          
          # Remove EVERYTHING from git and filesystem
          git rm -rf . || true
          find . -maxdepth 1 ! -name '.git' -exec rm -rf {} + || true
          
          # Copy ONLY the built files
          cp -r temp-deploy/* .
          
          # Verify what we have
          echo "=== FINAL DEPLOYED FILES ==="
          ls -la
          echo "=== FINAL INDEX.HTML ==="
          cat index.html
          
          # Add and commit
          git add .
          git commit -m "Deploy ONLY built files $(date)"
          
          # Force push to gh-pages
          git push -f origin gh-pages-clean:gh-pages